{"version":3,"sources":["components/GoodsList/index.ts","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","App","useState","started","setStarted","reversed","setReversed","sortBy","setSortBy","lengthLimit","setLengthLimit","visibleGoods","filter","g","length","sort","a","b","localeCompare","reverse","type","onClick","name","id","value","onChange","event","target","Object","keys","Array","fill","key","ReactDOM","render","document","getElementById"],"mappings":"kNAEeA,ECI2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,QAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,SCLXC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAmFaC,EAhFW,WACxB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,WAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsCN,mBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAwBMC,EAAeX,EAAgBY,QAAO,SAAAC,GAAC,OAAIA,EAAEC,QAAUL,KAE7D,OAAQF,GACN,IAAK,QACHI,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,IAAK,SACHN,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,OAASG,EAAEH,UAW7C,OAJIT,GACFM,EAAaQ,UAIb,sBAAKtB,UAAU,MAAf,UACE,uCAEEM,EAGE,qCACE,cAAC,EAAD,CACEP,MAAOe,IAGT,wBAAQS,KAAK,SAASC,QAnDlB,WACZf,GAAY,GACZE,EAAU,WACVE,EAAe,IAgDP,mBACA,wBAAQU,KAAK,SAASC,QA9ChB,kBAAMf,GAAaD,IA8CzB,qBACA,wBAAQe,KAAK,SAASC,QA7CZ,WAClBb,EAAU,UA4CF,iCACA,wBAAQY,KAAK,SAASC,QA1CX,WACnBb,EAAU,WAyCF,4BAEA,wBACEc,KAAK,SACLC,GAAG,SACHC,MAAOf,EACPgB,SA5CW,SAACC,GACtBhB,GAAgBgB,EAAMC,OAAOH,QAuCrB,SAMGI,OAAOC,KAAKC,MAAM,IAAIC,KAAK,IAAIjC,KAAI,SAAAkC,GAAG,OACrC,wBAAQR,OAAQQ,EAAM,EAAtB,UAA2BA,EAAM,YAnBvC,wBAAQZ,KAAK,SAASC,QA9Cb,kBAAMjB,GAAW,IA8C1B,uBCnEV6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5983b3d8.chunk.js","sourcesContent":["import { GoodsList } from './GoodsList';\n\nexport default GoodsList;\n","import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"goods\">\n      {goods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport GoodsList from './components/GoodsList';\n\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC<{}> = () => {\n  const [started, setStarted] = useState(false);\n  const [reversed, setReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('default');\n  const [lengthLimit, setLengthLimit] = useState(1);\n\n  const startApp = () => setStarted(true);\n\n  const reset = () => {\n    setReversed(false);\n    setSortBy('default');\n    setLengthLimit(1);\n  };\n\n  const reverse = () => setReversed(!reversed);\n\n  const sortByAlpha = () => {\n    setSortBy('alpha');\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n  };\n\n  const onLengthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setLengthLimit(+event.target.value);\n  };\n\n  const visibleGoods = goodsFromServer.filter(g => g.length >= lengthLimit);\n\n  switch (sortBy) {\n    case 'alpha':\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case 'length':\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (reversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n\n      {!started\n        ? <button type=\"button\" onClick={startApp}>Start</button>\n        : (\n          <>\n            <GoodsList\n              goods={visibleGoods}\n            />\n\n            <button type=\"button\" onClick={reset}>Reset</button>\n            <button type=\"button\" onClick={reverse}>Reverse</button>\n            <button type=\"button\" onClick={sortByAlpha}>Sort alphabetically</button>\n            <button type=\"button\" onClick={sortByLength}>Sort by length</button>\n\n            <select\n              name=\"length\"\n              id=\"length\"\n              value={lengthLimit}\n              onChange={onLengthChange}\n            >\n              {Object.keys(Array(10).fill(0)).map(key => (\n                <option value={+key + 1}>{+key + 1}</option>\n              ))}\n            </select>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}